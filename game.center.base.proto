syntax = "proto3";
package game_center_base;

message InvitationEmptyResp {
    int64 dm_error = 1;
    string error_msg = 2;
}

message InvitationIdResp {
    int64 dm_error = 1;
    string error_msg = 2;
    message Data {
        string invitation_id = 1;
    }
    Data data = 3;
}

message SetInvitationInfoReq {
    int64 uid = 1;
    int64 target_uid = 2;
    int64 game_type = 3;
    int64 game_mode = 4;
    int64 source = 5;
    string room_id = 6;
}

message InvitationIdReq {
    int64 uid = 1;
    string invitation_id = 2;
}

message UidReq {
    int64 uid = 1;
}

message DontDisturbStatus {
    int64 status = 1;
}

message GetInvitationInfoResp {
    int64 dm_error = 1;
    string error_msg = 2;
    InvitationInfoData data = 3;
}

message InvitationInfoData {
    string invitation_id = 1;
    int64 sender = 2;
    int64 receive = 3;
    GameInfo game_info = 4;
    int64 create_at = 5;
    int64 status = 6;
    string room_id = 7;
    int64 source = 8;
}

message UserInfo {
    string nick = 1;
    string portrait = 2;
}

message GameInfo {
    string game_name = 1;
    string game_mode_text = 2;
    int64 game_type = 3;
    int64 game_mode = 4;
    string game_icon = 5;
}

message InvitationFreqSingleReq {
    int64 uid = 1;
    int64 target_uid = 2;
}

message InvitationFreqSingleResp {
    int64 dm_error = 1;
    string error_msg = 2;
    message Data {
        int64 remaining_time = 1;
        bool is_can = 2;
    }
    Data data = 3;
}

message SetContinuousRefusedReq {
    int64 uid = 1;
    int64 status = 2;
}

message ContinuousRefusedResp {
    int64 dm_error = 1;
    string error_msg = 2;
    message Data {
        int64 is_show_dont_dis = 1;
    }
    Data data = 3;
}

message SetInvitationRoomIdReq {
    string invitation_id = 1;
    string room_id = 2;
}

service GameCenterService {
    rpc GetInvitationSenderStatus (UidReq) returns (InvitationIdResp); // 获取用户发送邀请信息
    rpc SetInvitationInfo (SetInvitationInfoReq) returns (InvitationIdResp); // 设置邀请信息
    rpc GetInvitationInfo (InvitationIdReq) returns (GetInvitationInfoResp); // 获取邀请信息
    rpc InvitationAccept (InvitationIdReq) returns (InvitationEmptyResp); // 用户接受邀请
    rpc InvitationCancel (InvitationIdReq) returns (InvitationEmptyResp); // 取消邀请
    rpc InvitationRefused (InvitationIdReq) returns (InvitationEmptyResp); // 用户拒绝
    rpc InvitationDontDisturb (UidReq) returns (InvitationEmptyResp); // 免打扰
    rpc GetInvitationDontDisturbStatus (UidReq) returns (DontDisturbStatus); // 获取免打扰状态
    rpc SetContinuousRefused (SetContinuousRefusedReq) returns (ContinuousRefusedResp); // 设置连续拒绝次数
    rpc GetContinuousRefused (UidReq) returns (ContinuousRefusedResp); // 获取连续拒绝状态
    rpc SetInvitationRoomId (SetInvitationRoomIdReq) returns (InvitationEmptyResp); // 设置room_id
    rpc InvitationFreqSingle(InvitationFreqSingleReq) returns (InvitationFreqSingleResp); // 频控
}